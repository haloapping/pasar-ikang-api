generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(ulid())
  password Password?
  // Cart      Cart?
  // cartItems CartItem[]

  username  String  @unique
  email     String  @unique
  firstName String
  lastName  String?
  avatarUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Cart      Cart[]
}

model Password {
  id     String @id @default(ulid())
  userId String @unique
  User   User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  hash String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id        String     @id @default(ulid())
  cartItems CartItem[]

  slug        String? @unique
  name        String  @unique
  imageUrl    String
  price       Int
  unit        String  @default("gr")
  description String?
  stock       Int
  sold        Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id     String     @id @default(ulid())
  user   User       @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId String
  items  CartItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CartItem {
  id        String  @id @default(ulid())
  product   Product @relation(fields: [productId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  productId String
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    String

  quantity Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
